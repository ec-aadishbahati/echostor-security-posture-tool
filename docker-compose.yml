version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: echostor_postgres
    environment:
      POSTGRES_USER: echostor
      POSTGRES_PASSWORD: dev_password_change_in_production
      POSTGRES_DB: security_posture
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U echostor"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: echostor_backend
    environment:
      DATABASE_URL: postgresql://echostor:dev_password_change_in_production@postgres:5432/security_posture
      JWT_SECRET_KEY: dev-secret-key-change-in-production-min-32-chars
      JWT_ALGORITHM: HS256
      ACCESS_TOKEN_EXPIRE_HOURS: 24
      ADMIN_TOKEN_EXPIRE_HOURS: 8
      ADMIN_EMAIL: aadish.bahati@echostor.com
      ASSESSMENT_EXPIRY_DAYS: 15
      AUTO_SAVE_INTERVAL_MINUTES: 10
      ALLOWED_ORIGINS: '["http://localhost:3000","http://frontend:3000"]'
      RATE_LIMIT_ENABLED: 'false'
      # Optional: Uncomment for AI-enhanced reports
      # OPENAI_API_KEY: your-openai-api-key-here
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./backend:/app
      - /app/.venv  # Prevent overwriting Poetry virtual environment
    command: sh -c "poetry run alembic upgrade head && poetry run uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
    driver: local

networks:
  default:
    name: echostor_network
