# ========================================
# REQUIRED CONFIGURATION
# ========================================

# Database URLs (REQUIRED)
# The application will not start without these
# If you only have one database, set both to the same value
DATABASE_URL_WRITE=postgresql://user:password@host:port/database
DATABASE_URL_READ=postgresql://user:password@host:port/database

# JWT Configuration (REQUIRED)
# Generate a secure random key with: openssl rand -hex 32
# NEVER commit your actual secret key to version control
JWT_SECRET_KEY=your-super-secret-jwt-key-here
JWT_ALGORITHM=HS256
ACCESS_TOKEN_EXPIRE_HOURS=24
ADMIN_TOKEN_EXPIRE_HOURS=8

# ========================================
# OPTIONAL CONFIGURATION
# ========================================

# OpenAI Configuration (OPTIONAL)
# Only required if you want AI-enhanced report generation
# If not set, the application will still work but AI reports will be unavailable
# OPENAI_API_KEY=sk-your-openai-api-key-here

# Admin Configuration - Option A: Environment-based admin (OPTIONAL)
# Set these to create a simple admin login that bypasses the database
# Both ADMIN_LOGIN_USER and ADMIN_LOGIN_PASSWORD must be set together
# ADMIN_LOGIN_USER=admin@example.com
# ADMIN_LOGIN_PASSWORD=your-secure-password

# Admin Configuration - Option B: Password hash-based admin (OPTIONAL)
# Alternative to Option A - uses bcrypt hash for password verification
# Generate hash with: python -c "from passlib.context import CryptContext; print(CryptContext(schemes=['bcrypt']).hash('your-password'))"
ADMIN_EMAIL=aadish.bahati@echostor.com
# ADMIN_PASSWORD_HASH=$2b$12$...your-bcrypt-hash-here...

# NOTE: If no admin credentials are configured, you can still create admin users
# in the database using the setup_admin.py script

# ========================================
# APPLICATION SETTINGS
# ========================================

# Assessment Configuration
ASSESSMENT_EXPIRY_DAYS=15
AUTO_SAVE_INTERVAL_MINUTES=10

# Reports Configuration
REPORTS_DIR=reports
AI_REPORT_DELIVERY_DAYS=5

# Redis Configuration (optional - for rate limiting with Slowapi)
# If not set, in-memory rate limiting will be used instead
# REDIS_URL=redis://localhost:6379/0

# Sentry Error Tracking (optional)
# If not set, the application will work normally without error tracking
# Get your DSN from https://sentry.io after creating a project
# SENTRY_DSN=https://your-sentry-dsn-here@sentry.io/your-project-id
# SENTRY_ENVIRONMENT=development
